###
# Mask data for one region and output prediction for the masked region. Runs once for each region.
region_holdout:
  experiment_file: region_holdout.py
  experiment_tag: region_holdout
  n_chains: 4
  n_samples: 2000
  args:
    rg:
      - AL
      - AD
      - AT
      - BE
      - BA
      - BG
      - HR
      - CZ
      - DK
      - EE
      - FI
      - FR
      - GE
      - DE
      - GR
      - HU
      - IS
      - IE
      - IL
      - IT
      - LV
      - LT
      - MY
      - MT
      - MX
      - MA
      - NL
      - NZ
      - 'NO' # otherwise this evaluates to false!
      - PL
      - PT
      - RO
      - RS
      - SG
      - SK
      - SI
      - ZA
      - ES
      - SE
      - CH
      - GB

###
# Remove NPI indicators from dataset and fit model with the remaining set of NPIs. Runs once for each NPI, and additionally leaves out school and university closures jointly
npi_leaveout:
  experiment_file: npi_leaveout.py
  experiment_tag: npi_leaveout
  n_chains: 4
  n_samples: 2000
  args:
    npis:
      - [0]
      - [1]
      - [2]
      - [3]
      - [4]
      - [5]
      - [6]
      - [7]
      - [8]

###
# Run the model masking daily confirmed cases when a region's total number of confirmed cases is below [10, 50, 150, 200] cases
cases_threshold:
  experiment_file: preprocessing_tests.py
  experiment_tag: cases_threshold
  n_chains: 4
  n_samples: 2000
  args:
    smoothing: 1
    deaths_threshold: 10
    cases_threshold: [10, 30, 50, 200, 300]

###
# Run the model masking daily death counts when a region's total number of deaths is below [1, 5, 30, 50] deaths
deaths_threshold:
  experiment_file: preprocessing_tests.py
  experiment_tag: deaths_threshold
  n_chains: 4
  n_samples: 2000
  args:
    smoothing: 1
    deaths_threshold: [1, 5, 30, 50]
    cases_threshold: 100

###
# | Run the model with additional featurs from OxCGRT and our own data:
# | ['Mask Wearing', 'Travel Screen/Quarantine', 'Travel Bans', 'Public Transport Limited',
# | 'Internal Movement Limited', 'Public Information Campaigns', 'Symptomatic Testing']
oxcgrt:
  experiment_file: oxcgrt_leavein.py
  experiment_tag: oxcgrt
  n_chains: 4
  n_samples: 2000
  args:
    npis:
      - [0]
      - [1, 2]
      - [3]
      - [4]
      - [5]
      - [6]

###
# Run the model with a prior mean R0 of [2.28, 2.78, 3.78, 4.38]
R_prior:
  experiment_file: alternative_build_param.py
  experiment_tag: R_prior
  n_chains: 4
  n_samples: 2000
  args:
    R_prior_mean: [2.38, 2.78, 3.28, 3.78, 4.28]
    NPI_prior: skewed 10
    alpha_noise: 0.04

###
# Add noise to growth rate
alpha_noise:
  experiment_file: alternative_build_param.py
  experiment_tag: alpha_noise_scale
  n_chains: 4
  n_samples: 2000
  args:
    R_prior_mean: 3.28
    NPI_prior: skewed 10
    alpha_noise:
      - 0.02
      - 0.03
      - 0.04
      - 0.05

###
# Run the model with an NPI effetiveness prior of [skewed 10, Normal(0,0.2), ICL]
npi_prior:
  experiment_file: alternative_build_param.py
  experiment_tag: npi_prior
  n_chains: 4
  n_samples: 2000
  args:
    R_prior_mean: 3.28
    NPI_prior:
      - normal 0.2
      - half_normal 0.2
      - icl 0
      - normal 10
    alpha_noise: 0.04

###
# | Run the model with alternative structures: 
# | [additive, discrete_renewal_fixed_gi,
# | noisy_r, different_effects, cases_only, deaths_only]
structural:
  experiment_file: structural.py
  experiment_tag: structural
  model_type: complex # note this argument is neglected here
  n_chains: 4
  n_samples: 2000
  args:
    model_structure:
      - additive
      - discrete_renewal
      - noisy_r
      - default
      - cases_only
      - deaths_only


epiparam_prior:
  experiment_file: epiparam.py
  experiment_tag: epiparam_prior
  n_chains: 4
  n_samples: 2000
  args:
    gi_mean_mean: [3.06, 4.06, 5.06, 6.06, 7.06]
    gi_mean_sd: 0.3265
    deaths_mean_mean: [17.82, 19.82, 21.82, 23.82, 25.82]
    deaths_mean_sd: 1.01
    cases_mean_mean: [7.92, 9.42, 10.92, 12.42, 13.92]
    cases_mean_sd: 0.94

iceswe:
  experiment_file: iceswe.py
  experiment_tag: iceswe
  n_chains: 4
  n_samples: 2000
  args: {}

scaling:
  experiment_file: scaling.py
  experiment_tag: scaling
  n_chains: 4
  n_samples: 2000
  args:
    scaling_type:
        - simple
        - variable

missing_structural:
  experiment_file: structural.py
  experiment_tag: structural
  model_type: complex # note this argument is neglected here
  n_chains: 4
  n_samples: 2000
  args:
    model_structure:
      - discrete_renewal
      - cases_only